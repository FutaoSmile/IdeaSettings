<application>
  <component name="AppStorage">
    <histories>
      <item value="This method is guaranteed to be called before any use of this instance for * validation." />
      <item value="列" />
      <item value="manage" />
      <item value="业务" />
      <item value="流水号" />
      <item value="外送" />
      <item value="street" />
      <item value="street Name" />
      <item value="sensitive" />
      <item value="推荐" />
      <item value="reservation State" />
      <item value="meter" />
      <item value="porgao Code" />
      <item value="impacting" />
      <item value="meterplatform" />
      <item value="rolling Policy" />
      <item value="* Instantiate a class using its 'primary' constructor (for Kotlin classes, * potentially having default arguments declared) or its default constructor * (for regular Java classes, expecting a standard no-arg setup). * &lt;p&gt;Note that this method tries to set the constructor accessible * if given a non-accessible (that is, non-public) constructor. * @param clazz the class to instantiate * @return the new instance * @throws BeanInstantiationException if the bean cannot be instantiated. * The cause may notably indicate a {@link NoSuchMethodException} if no * primary/default constructor was found, a {@link NoClassDefFoundError} * or other {@link LinkageError} in case of an unresolvable class definition * (e.g. due to a missing dependency at runtime), or an exception thrown * from the constructor invocation itself. * @see Constructor#newInstance" />
      <item value="alternatively" />
      <item value="resolves" />
      <item value="indefinitely" />
      <item value="Determine" />
      <item value="Position" />
      <item value="Inform" />
      <item value="Absent" />
      <item value="get Correlation Id" />
      <item value="符号" />
      <item value="必输字段" />
      <item value="compute If Absent" />
      <item value="AND括号" />
      <item value="括号" />
      <item value="Gwt Incompatible" />
      <item value="中间" />
      <item value="中间的" />
      <item value="格式检查" />
      <item value="frozen" />
      <item value="cartesian Product" />
      <item value="pre" />
      <item value="suff" />
      <item value="反转" />
      <item value="是否互相包含" />
      <item value="is Each Contains" />
      <item value="Each" />
      <item value="检查器" />
      <item value="supporter" />
      <item value="Handler" />
      <item value="repetition" />
      <item value="Ancestor" />
      <item value="struct Analysis" />
      <item value="源数据" />
      <item value="set Use Exponential Back Off" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="263" />
        <entry key="ENGLISH" value="264" />
        <entry key="BOSNIAN" value="1" />
        <entry key="DANISH" value="3" />
        <entry key="RUSSIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190917000334998" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="showExplanation" value="true" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>