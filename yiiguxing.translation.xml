<application>
  <component name="AppStorage">
    <histories>
      <item value="This is often the result of over-eager type matching - consider using 'getBeanNamesOf" />
      <item value="This means that said other beans do not use the final version of the bean." />
      <item value="its raw version as part of a circular reference, but has eventually been wrapped" />
      <item value="asynchronous" />
      <item value="* Adds a response header with the given name and value. This method allows * response headers to have multiple values." />
      <item value="* Sets a response header with the given name and value. If the header had * already been set, the new value overwrites the previous one. The * &lt;code&gt;containsHeader&lt;/code&gt; method can be used to test for the presence * of a header before setting its value." />
      <item value="Laws Regulations" />
      <item value="街道" />
      <item value="Productor" />
      <item value="stop Produce" />
      <item value="暂停等待" />
      <item value="暂停" />
      <item value="* The current thread must own this object's monitor. The thread * releases ownership of this monitor and waits until another thread * notifies threads waiting on this object's monitor to wake up * either through a call to the {@code notify} method or the * {@code notifyAll} method. The thread then waits until it can * re-obtain ownership of the monitor and resumes execution." />
      <item value="The current thread must own this object's monitor. The thread * releases ownership of this monitor and waits until another thread * notifies threads waiting on this object's monitor to wake up * either through a call to the {@code notify} method or the * {@code notifyAll} method. The thread then waits until it can * re-obtain ownership of the monitor and resumes execution." />
      <item value="behaves" />
      <item value="invokes" />
      <item value="A method overriding another method must not redefine the parameter constraint configuration" />
      <item value="Todo" />
      <item value="manager Task Impl Mapper" />
      <item value="count Todo" />
      <item value="un Read Count" />
      <item value="un Read" />
      <item value="练习" />
      <item value="li" />
      <item value="given fairness policy" />
      <item value="reentrant Lock" />
      <item value="Reentrant Lock" />
      <item value="* &amp;#64;SneakyThrow does not silently swallow, wrap into RuntimeException, or otherwise modify any exceptions of the listed * checked exception types. The JVM does not check for the consistency of the checked exception system; javac does, * and this annotation lets you opt out of its mechanism." />
      <item value="* &lt;p&gt; * &amp;#64;SneakyThrow does not silently swallow, wrap into RuntimeException, or otherwise modify any exceptions of the listed * checked exception types. The JVM does not check for the consistency of the checked exception system; javac does," />
      <item value="silently" />
      <item value="insistence" />
      <item value="avoid" />
      <item value="卖" />
      <item value="lo Tail" />
      <item value="inherited" />
      <item value="get Org Task Detail List Bytask Id" />
      <item value="反射" />
      <item value="reflect" />
      <item value="* If there is a security manager, its &lt;code&gt;checkAccess&lt;/code&gt; method * is called with this thread as its argument. This may result in * throwing a &lt;code&gt;SecurityException&lt;/code&gt;." />
      <item value="* Determines if the currently running thread has permission to * modify this thread." />
      <item value="Otherwise, the priority of this thread is set to the smaller of * the specified &lt;code&gt;newPriority&lt;/code&gt; and the maximum permitted * priority of the thread's thread group." />
      <item value="Changes the priority of this thread. * &lt;p&gt; * First the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called * with no arguments. This may result in throwing a * &lt;code&gt;SecurityException&lt;/code&gt;. * &lt;p&gt; * Otherwise, the priority of this thread is set to the smaller of * the specified &lt;code&gt;newPriority&lt;/code&gt; and the maximum permitted * priority of the thread's thread group. *" />
      <item value="* A hint to the scheduler that the current thread is willing to yield * its current use of a processor. The scheduler is free to ignore this * hint." />
      <item value="A hint to the scheduler that the current thread is willing to yield * its current use of a processor. The scheduler is free to ignore this * hint. *" />
      <item value="yield" />
      <item value="typically" />
      <item value="improve" />
      <item value="idle" />
      <item value="Threads that have * not been used for sixty seconds are terminated and removed from * the cach" />
      <item value="constructed" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="420" />
        <entry key="ENGLISH" value="421" />
        <entry key="BOSNIAN" value="1" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="3" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190917000334998" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>