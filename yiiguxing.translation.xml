<application>
  <component name="AppStorage">
    <histories>
      <item value="动态" />
      <item value="exclusive" />
      <item value="* Annotation that binds a method parameter to the payload of a message. Can also * be used to associate a payload to a method invocation. The payload may be passed * through a {@link MessageConverter} to convert it from serialized form with a * specific MIME type to an Object matching the target method parameter." />
      <item value="Definition" />
      <item value="定义" />
      <item value="Correlation Data" />
      <item value="mandatory" />
      <item value="Ware" />
      <item value="Ware House" />
      <item value="仓库" />
      <item value="执行人数" />
      <item value="进制" />
      <item value="pretend" />
      <item value="接收者" />
      <item value="taker" />
      <item value="已审批" />
      <item value="等待审核" />
      <item value="接受" />
      <item value="待审核" />
      <item value="审批" />
      <item value="Nested" />
      <item value="嵌套的" />
      <item value="结构" />
      <item value="BEAN CONTAINER" />
      <item value="next Int" />
      <item value="* Returns the next pseudorandom, uniformly distributed {@code int} * value from this random number generator's sequence. The general * contract of {@code nextInt} is that one {@code int} value is * pseudorandomly generated and returned. All 2&lt;sup&gt;32&lt;/sup&gt; possible * {@code int} values are produced with (approximately) equal probability. * * &lt;p&gt;The method {@code nextInt} is implemented by class {@code Random} * as if by: * &lt;pre&gt; {@code * public int nextInt() { * return next(32); * }}&lt;/pre&gt; * * @return the next pseudorandom, uniformly distributed {@code int} * value from this random number generator's sequence */" />
      <item value="this" />
      <item value="grep" />
      <item value="剩余" />
      <item value="Rest" />
      <item value="Caller Sensitive" />
      <item value="Cognitive Complexity" />
      <item value="dedicated" />
      <item value="inherited" />
      <item value="inherit Doc" />
      <item value="Representation" />
      <item value="Formal parameter declaration" />
      <item value="relative" />
      <item value="Base directory for the context, for static files. * Must exist, relative to the server home" />
      <item value="represents" />
      <item value="remarks" />
      <item value="备注" />
      <item value="remark" />
      <item value="Wait until a proper shutdown command is received, then return." />
      <item value="gregory" />
      <item value="japanese" />
      <item value="buddhist" />
      <item value="extract Package Class" />
      <item value="press" />
      <item value="Return whether one or more of the given profiles is active or, in the case of no * explicit active profiles, whether one or more of the given profiles is included in * the set of default profiles. If a profile begins with '!' the logic is inverted, * i.e. the method will return true if the given profile is &lt;em&gt;not&lt;/em&gt; active. * For example, &lt;pre class=&quot;code&quot;&gt;env.acceptsProfiles(&quot;p1&quot;, &quot;!p2&quot;)&lt;/pre&gt; will * return {@code true} if profile 'p1' is active or 'p2' is not active. * @throws IllegalArgumentException if called with zero arguments * or if any profile is {@code null}, empty or whitespace-only" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="645" />
        <entry key="ENGLISH" value="645" />
        <entry key="BOSNIAN" value="1" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FINNISH" value="2" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190917000334998" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>