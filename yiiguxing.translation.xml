<application>
  <component name="AppStorage">
    <histories>
      <item value="* Constructs a new {@code String} by decoding the specified array of * bytes using the specified {@linkplain java.nio.charset.Charset charset}. * The length of the new {@code String} is a function of the charset, and * hence may not be equal to the length of the byte array. * * &lt;p&gt; This method always replaces malformed-input and unmappable-character * sequences with this charset's default replacement string. The {@link * java.nio.charset.CharsetDecoder} class should be used when more control * over the decoding process is required." />
      <item value="* Encodes this {@code String} into a sequence of bytes using the given * {@linkplain java.nio.charset.Charset charset}, storing the result into a * new byte array. *" />
      <item value="* Encodes this {@code String} into a sequence of bytes using the given * {@linkplain java.nio.charset.Charset charset}, storing the result into a * new byte array." />
      <item value="Sneaky" />
      <item value="Sneaky Throws" />
      <item value="* * @param uploadFileRequest A {@link UploadFileRequest} instance that specifies the bucket name, object key, file path * ,part size (&gt;100K) and thread count (from 1 to 1000) and checkpoint file." />
      <item value="* This method will automatically split files into parts and upload them in parallel by a thread pool, though by * default the thread pool only has one thread. * After all parts are uploaded, then it will merge them into one file. But if any one part fails to be uploaded, * the whole upload fails. * Optionally a checkpoint file could be used to track the progress of the upload and resume the upload later upon * failure. Once the upload completes, the checkpoint file would be deleted. * By default checkpoint file is disabled. *" />
      <item value="Optionally" />
      <item value="/** * Uploads the file from a specified file path to the signed URL with specified headers * @param signedUrl Signed url, which has the bucket name, object key, account information and accessed Ids and * its signature. The url is recommended to be generated by generatePresignedUrl(). * @param filePath The file path to read from * @param requestHeaders Request headers, including standard or customized http headers documented by PutObject REST * API. * @return A {@link PutObjectResult} instance. */" />
      <item value="Negative Array Size Exception" />
      <item value="privilege" />
      <item value="无用的" />
      <item value="specific Activity" />
      <item value="Raw use of parameterized class 'Page'" />
      <item value="Supervisor Task Not Arrange Job" />
      <item value="send msg to notify mq fail" />
      <item value="fail" />
      <item value="receive" />
      <item value="invoke" />
      <item value="encountered" />
      <item value="ui config" />
      <item value="deserialized" />
      <item value="alternate Names" />
      <item value="业务类型" />
      <item value="only In Progress" />
      <item value="进行中" />
      <item value="last Name" />
      <item value="first Name" />
      <item value="surname" />
      <item value="姓" />
      <item value="PARITY BIT" />
      <item value="PARITYBIT" />
      <item value="PARITY" />
      <item value="hour" />
      <item value="Avatar" />
      <item value="未来" />
      <item value="rest" />
      <item value="班次名称" />
      <item value="Shifts" />
      <item value="班次" />
      <item value="计算" />
      <item value="已排班" />
      <item value="开关" />
      <item value="switch" />
      <item value="* Filter candidates assignable to a given type." />
      <item value="受影响的行数" />
      <item value="* A container for settings for the generation of getters and setters. * &lt;p&gt; * Complete documentation is found at &lt;a href=&quot;https://projectlombok.org/features/experimental/Accessors&quot;&gt;the project lombok features page for &amp;#64;Accessors&lt;/a&gt;. * &lt;p&gt; * Using this annotation does nothing by itself; an annotation that makes lombok generate getters and setters, * such as {@link lombok.Setter} or {@link lombok.Data} is also required. */" />
      <item value="/* * Copyright (C) 2012-2017 The Project Lombok Authors. * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the &quot;Software&quot;), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ package lombok.experimental; import java.lang.annotation.ElementType; import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target; /** * A container for settings for the generation of getters and setters. * &lt;p&gt; * Complete documentation is found at &lt;a href=&quot;https://projectlombok.org/features/experimental/Accessors&quot;&gt;the project lombok features page for &amp;#64;Accessors&lt;/a&gt;. * &lt;p&gt; * Using this annotation does nothing by itself; an annotation that makes lombok generate getters and setters, * such as {@link lombok.Setter} or {@link lombok.Data} is also required. */ @Target({ElementType.TYPE, ElementType.FIELD}) @Retention(RetentionPolicy.SOURCE) public @interface Accessors { /** * If true, accessors will be named after the field and not include a {@code get} or {@code set} * prefix. If true and {@code chain} is omitted, {@code chain} defaults to {@code true}. * &lt;strong&gt;default: false&lt;/strong&gt; * * @return Whether or not to make fluent methods (named {@code fieldName()}, not for example {@code setFieldName}). */ boolean fluent() default false; /** * If true, setters return {@code this} instead of {@code void}. * &lt;strong&gt;default: false&lt;/strong&gt;, unless {@code fluent=true}, then &lt;strong&gt;default: true&lt;/strong&gt; * * @return Whether or not setters should return themselves (chaining) or {@code void} (no chaining). */ boolean chain() default false; /** * If present, only fields with any of the stated prefixes are given the getter/setter treatment. * Note that a prefix only counts if the next character is NOT a lowercase character or the last * letter of the prefix is not a letter (for instance an underscore). If multiple fields * all turn into the same name when the prefix is stripped, an error will be generated. * * @return If you are in the habit of prefixing your fields (for example, you name them {@code fFieldName}, specify such prefixes here). */ String[] prefix() default {}; }" />
      <item value="FIELD" />
      <item value="logged In" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="605" />
        <entry key="ENGLISH" value="606" />
        <entry key="BOSNIAN" value="1" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FINNISH" value="2" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190917000334998" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>